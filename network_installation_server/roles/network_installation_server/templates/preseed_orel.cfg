# Locales, country
d-i debian-installer/locale string en_US
d-i debian-installer/locale select en_US.UTF-8
d-i localechooser/supported-locales multiselect en_US.UTF-8, ru_RU.UTF-8
d-i debian-installer/language string en
d-i debian-installer/country string RU
d-i debian-installer/keymap string ru

# Keymaps
d-i console-tools/archs select at
d-i console-keymaps-at/keymap select ru
d-i console-setup/toggle string Alt+Shift
d-i console-setup/layoutcode string ru
d-i keyboard-configuration/toggle select Alt+Shift
d-i keyboard-configuration/layoutcode string ru
d-i keyboard-configuration/xkb-keymap select ru
d-i languagechooser/language-name-fb select Russian
d-i countrychooser/country-name select Russia

# Chose active network interface
d-i netcfg/choose_interface select auto

# Chose special network interface
#d-i netcfg/choose_interface select eth1

# If you have a slow dhcp server and the installer times out waiting for
# it, this might be useful.
d-i netcfg/dhcp_timeout string 60

# Uncomment for setting up network manually
#d-i netcfg/disable_dhcp boolean true

# For setup without dhcp-server
#d-i netcfg/dhcp_failed note
#d-i netcfg/dhcp_options select Configure network manually

# Uncomment for setting up network manually
#d-i netcfg/get_nameservers string 192.168.1.1
#d-i netcfg/get_ipaddress string 192.168.1.42
#d-i netcfg/get_netmask string 255.255.255.0
#d-i netcfg/get_gateway string 192.168.1.1
#d-i netcfg/confirm_static boolean true

#non-free,contrib
d-i apt-setup/non-free boolean true
d-i apt-setup/contrib boolean true

# Hostname, network domain (low priority)
d-i netcfg/get_hostname string {{ temp_hostname }}
d-i netcfg/get_hostname seen true
d-i netcfg/get_domain string {{ network_domain }}

d-i apt-setup/services-select none
d-i apt-setup/security_host string

#d-i netcfg/wireless_wep string {{ wireless_wep }}
d-i netcfg/wireless_wep string

# Repo
d-i mirror/protocol string http
d-i mirror/country string manual
d-i mirror/http/hostname string {{ ansible_default_ipv4.address }}
d-i mirror/http/directory string /repo/orel
d-i mirror/http/proxy string

# Hardware clock
d-i clock-setup/utc boolean true

# Timezone
d-i time/zone string Europe/Moscow

# NTP
#d-i clock-setup/ntp boolean true
# Используемый сервер NTP. Значение по умолчанию указывается здесь.
#d-i clock-setup/ntp-server 10.100.130.200

# Disk partitioning
d-i partman-auto-crypto/erase_disks boolean false

# Encryption
d-i partman-auto/method string crypto

# Remove old configuarations
d-i partman-auto/purge_lvm_from_device boolean true
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

d-i partman-auto-lvm/guided_size string max
d-i partman-auto-lvm/new_vg_name string {{ vg_name }}
#d-i partman-auto/disk string /dev/{{ disk_device_name }}
d-i partman-auto/choose_recipe select boot-crypto
d-i partman-crypto/passphrase password {{ crypto_passphrase }}
d-i partman-crypto/passphrase-again password {{ crypto_passphrase }}
d-i partman-auto/expert_recipe string \
boot-crypto :: \
  {{ boot_efi_partition_size }} {{ boot_efi_partition_size }} {{ boot_efi_partition_size }} {{ boot_efi_partition_fs_type }} \
          $primary{ } $bootable{ } \
          method{ efi } format{ } \
          mountpoint{ /boot/efi } \
  . \
  {{ boot_partition_size }} {{ boot_partition_size }} {{ boot_partition_size }} {{ boot_partition_fs_type }} \
          $primary{ } $bootable{ } \
          method{ format } format{ } \
          use_filesystem{ } filesystem{ {{ boot_partition_fs_type }} } \
          mountpoint{ /boot } \
  . \
  {{ swap_partition_size }} {{ swap_partition_size }} {{ swap_partition_size }} linux-swap \
          $lvmok{ } lv_name{ swap } \
          in_vg { {{ vg_name }} } \
          method{ swap } format{ } \
  . \
  {{ root_partition_min_size }} {{ root_partition_size }} 1000000 {{ root_partition_fs_type }} \
          $lvmok{ } lv_name{ root } \
          in_vg { {{ vg_name }} } \
          method{ format } format{ } \
          use_filesystem{ } filesystem{ {{ root_partition_fs_type }} } \
          mountpoint{ / } \
   . \

d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

d-i partman-md/confirm boolean true
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Kernel maet package
d-i base-installer/kernel/image string {{ linux_kernel }}

# Super-user creation
#d-i passwd/root-login boolean false
# User creation
d-i passwd/make-user boolean true

# Super-user password (clear text)
#d-i passwd/root-password password 12345678
#d-i passwd/root-password-again password 12345678
# Super-user password (MD5-hash)
d-i passwd/root-password-crypted password {{ root_password_md5_hash }}

# Create user account with administrative privileges
d-i passwd/user-fullname string {{ user_login }}
d-i passwd/username string {{ user_login }}

# User password (clear text)
#d-i passwd/user-password password 12345678
#d-i passwd/user-password-again password 12345678

# User password (MD5-hash)
d-i passwd/user-password-crypted password {{ user_password_md5_hash }}
# Set user UID
#d-i passwd/user-uid string 1010

# User groups
#d-i passwd/user-default-groups string audio cdrom video

# Дополнительные репозитории доступны как local[0-9]
#d-i apt-setup/local0/repository string \
#       http://local.server/debian stable main
#d-i apt-setup/local0/comment string local server
# Активировать строки для deb-src
#d-i apt-setup/local0/source boolean true
# URL публичного ключа локального репозитория; вы должны
# предоставлять ключ, или apt будет жаловаться о невозможности
# аутентифицировать репозиторий и закомментирует строку,
# описывающую этот репозиторий в sources.list
#d-i apt-setup/local0/key string http://local.server/key

# Disable gpg-keys check (not secure)
#d-i debian-installer/allow_unauthenticated string true

# Add components
tasksel	tasksel/first	multiselect	Base packages, Fly desktop
tasksel tasksel/astra-feat-setup multiselect

# Add packages
d-i pkgsel/include string openssh-server firefox firefox-locale-ru firefox-astra browser-plugin-vlc thunderbird thunderbird-locale-ru fonts-crosextra-carlito fonts-dejavu fonts-liberation fonts-opensymbol curl gstreamer1.0-libav gstreamer1.0-plugins-ugly libasound2 libc6 libcairo2 libgcc1 libgconf-2-4 libgtk-3-0 libstdc++6 libx11-6 libxss1 x11-common xdg-utils astra-safepolicy libccid libpcsclite1 opensc

# Security options
astra-additional-setup	astra-additional-setup/additional-settings	multiselect	
d-i	astra-additional-setup/additional-settings	multiselect	Enable interpreters lock, Enable ufw firewall, Enable system limits, Disable ptrace capability, Disable non-execution bit setup, Enable password entry for sudo
astra-additional-setup	astra-additional-setup/automatic-network-disable	multiselect	
d-i	astra-additional-setup/automatic-network-disable	multiselect
d-i desktop-tablet-mode-switch/tablet-mode multiselect

# Astra-specific options
tripwire tripwire/use-localkey boolean false
tripwire tripwire/use-sitekey boolean false
tripwire tripwire/installed note ok
portsentry portsentry/warn_no_block note ok
astra-license astra-license/license boolean true
krb5-config krb5-config/kerberos_servers string
libnss-ldapd libnss-ldapd/ldap-base string
libnss-ldapd libnss-ldapd/ldap-uris string
libnss-ldapd libnss-ldapd/nsswitch multiselect services
ald-client ald-client/make_config boolean false
ald-client ald-client/manual_configure false
astra-feat-setup astra-feat-setup/feat multiselect kiosk mode false
astra-feat-setup astra-feat-setup/feat multiselect Служба ALD false
d-i console-cyrillic/switch select "Клавиша Menu"
d-i console-cyrillic/toggle select Control+Shift
d-i samba-common/dhcp boolean false
d-i samba-common/workgroup string {{ samba_workgroup }}

# Disable telemetry
popularity-contest popularity-contest/participate boolean false

# GRUB
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true

# Setup grub to specific disk
grub-installer  grub-installer/choose_bootdev   select  /dev/{{ disk_device_name }}
d-i grub-pc/install_devices multiselect /dev/{{ disk_device_name }}

# По умолчанию grub ставится на первый диск
# Или же, если вы хотите установить загрузчик не в mbr,
# то раскомментируйте и отредактируйте следующие строки:
#d-i grub-installer/only_debian boolean false
#d-i grub-installer/with_other_os boolean false
#d-i grub-installer/bootdev  string (hd0,0)
#d-i grub-pc/install_devices multiselect /dev/sda
# Для установки grub на несколько дисков:
#d-i grub-installer/bootdev  string (hd0,0) (hd1,0) (hd2,0)

# Disable finish message
d-i finish-install/reboot_in_progress note
d-i finish-install/exit/poweroff boolean true

# Postinstall actions
d-i preseed/late_command string \

in-target touch /etc/grub.d/07_password; \
echo '#!/bin/bash' > /target/etc/grub.d/07_password; \
echo '' >> /target/etc/grub.d/07_password; \
echo 'cat << EOF' >> /target/etc/grub.d/07_password; \
echo 'set superusers="{{ grub_user }}"' >> /target/etc/grub.d/07_password; \
echo 'password_pbkdf2 {{ grub_user }} {{ grub_password }}' >> /target/etc/grub.d/07_password; \
echo 'EOF' >> /target/etc/grub.d/07_password; \
in-target chmod 700 /etc/grub.d/07_password; \
in-target sed -i 's/#GRUB_DISABLE_RECOVERY="true"/GRUB_DISABLE_RECOVERY="true"/g' /etc/default/grub; \
in-target update-grub; \

in-target mkdir /extra-packages; \

in-target wget http://{{ ansible_default_ipv4.address }}/repo/extra/crypto_pro_csp/"{{ crypto_pro_csp }}" -O /extra-packages/"{{ crypto_pro_csp }}"; \
in-target mkdir /extra-packages/crypto-pro-csp-5; \
in-target tar xvf /extra-packages/"{{ crypto_pro_csp }}" -C /extra-packages/crypto-pro-csp-5; \
in-target /bin/bash /extra-packages/crypto-pro-csp-5/linux-amd64_deb/install.sh; \

in-target wget http://{{ ansible_default_ipv4.address }}/repo/extra/librtpkcs11ecp/{{ librtpkcs11ecp }} -O /extra-packages/"{{ librtpkcs11ecp }}"; \
in-target dpkg -i /extra-packages/"{{ librtpkcs11ecp }}"; \

in-target wget http://{{ ansible_default_ipv4.address }}/repo/extra/litoria-desktop/"{{ litoria_desktop }}" -O /extra-packages/"{{ litoria_desktop }}"; \
in-target mkdir /extra-packages/litoria-desktop-2.7.11; \
in-target tar xvf /extra-packages/"{{ litoria_desktop }}" -C /extra-packages/litoria-desktop-2.7.11; \
in-target dpkg -i /extra-packages/litoria-desktop-2.7.11/cryptoplatform_1.7.1-1_amd64.deb; \
in-target dpkg -i /extra-packages/litoria-desktop-2.7.11/litoria_2.7.11-3_amd64.deb; \

in-target wget http://{{ ansible_default_ipv4.address }}/repo/extra/r7-office/"{{ r7_office }}" -O /extra-packages/"{{ r7_office }}"; \
in-target dpkg -i /extra-packages/"{{ r7_office }}"; \

in-target wget http://{{ ansible_default_ipv4.address }}/repo/extra/yandex-disk/"{{ yandex_disk }}" -O /extra-packages/"{{ yandex_disk }}"; \
in-target dpkg -i /extra-packages/"{{ yandex_disk }}"; \

in-target wget http://{{ ansible_default_ipv4.address }}/repo/extra/ms-teams/"{{ ms_teams }}" -O /extra-packages/"{{ ms_teams }}"; \
in-target dpkg -i /extra-packages/"{{ ms_teams }}"; \

in-target wget http://{{ ansible_default_ipv4.address }}/repo/extra/rtadmin/"{{ rtadmin }}" -O /extra-packages/"{{ rtadmin }}"; \
in-target cp /extra-packages/"{{ rtadmin }}" /opt; \
in-target chmod +x /opt/"{{ rtadmin }}"; \
in-target ln -s /opt/"{{ rtadmin }}" /usr/bin/rtadmin; \

in-target wget http://{{ ansible_default_ipv4.address }}/repo/extra/citrix_client/"{{ citrix_client }}" -O /extra-packages/"{{ citrix_client }}"; \
in-target dpkg -i /extra-packages/"{{ citrix_client }}"; \

echo 'fs.suid_dumpable=0' >> /target/etc/sysctl.conf; \
echo 'kernel.randomize_va_space=2' >> /target/etc/sysctl.conf; \
echo 'kernel.sysrq=0' >> /target/etc/sysctl.conf; \
echo 'net.ipv4.ip_forward=0' >> /target/etc/sysctl.conf; \
echo 'net.ipv4.conf.all.send_redirects=0' >> /target/etc/sysctl.conf; \
echo 'net.ipv4.conf.default.send_redirects=0' >> /target/etc/sysctl.conf; \

in-target sed -i '/\Defaults.*env_reset$/i Defaults        timestamp_timeout=0' /etc/sudoers; \

#in-target sed -i 's/127.0.1.1.*$/#127.0.1.1/g' /etc/hosts; \

in-target systemctl enable ssh
