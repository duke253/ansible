---
# This task create repo, install & configure Apache2.

- name: Install Apache2
  apt:
    name: "{{ item }}"
    state: present
  with_items:
   - apache2

- name: Create repo dirs
  file:
    path: "{{ item }}"
    state: directory
    owner: www-data
    group: www-data
    mode: '0755'
  with_items:
   - /srv/repo/orel
   - /srv/repo/extra/crypto_pro_csp
   - /srv/repo/extra/litoria-desktop
   - /srv/repo/extra/r7-office
   - /srv/repo/extra/yandex-browser
   - /srv/repo/extra/yandex-disk
   - /srv/repo/extra/ms-teams
   - /srv/repo/extra/rtadmin
   - /srv/repo/extra/librtpkcs11ecp
   - /srv/repo/extra/citrix_client

- name: Check existing of Crypto Pro CSP package
  stat:
    path: /srv/repo/extra/crypto_pro_csp/{{ crypto_pro_csp }}
  register: crypto_pro_csp_stat_result

- name: Check existing of Litoria Desktop package
  stat:
    path: /srv/repo/extra/litoria-desktop/{{ litoria_desktop }}
  register: litoria_desktop_stat_result

- name: Check existing of R7 Office package
  stat:
    path: /srv/repo/extra/r7-office/{{ r7_office }}
  register: r7_office_stat_result

- name: Check existing of yandex browser package
  stat:
    path: /srv/repo/extra/yandex-browser/{{ yandex_browser }}
  register: yandex_browser_stat_result

- name: Check existing of yandex disk package
  stat:
    path: /srv/repo/extra/yandex-disk/{{ yandex_disk }}
  register: yandex_disk_stat_result

- name: Check existing of MS Teams package
  stat:
    path: /srv/repo/extra/ms-teams/{{ ms_teams }}
  register: ms_teams_stat_result

- name: Check existing of rtadmin package
  stat:
    path: /srv/repo/extra/rtadmin/{{ rtadmin }}
  register: rtadmin_stat_result

- name: Check existing of librtpkcs11ecp package
  stat:
    path: /srv/repo/extra/librtpkcs11ecp/{{ librtpkcs11ecp }}
  register: librtpkcs11ecp_stat_result

- name: Check existing of Citrix Client package
  stat:
    path: /srv/repo/extra/citrix_client/{{ citrix_client }}
  register: citrix_client_stat_result

- name: Copy Crypto Pro CSP package
  copy:
    src: "{{ extra_packages_src_path + crypto_pro_csp }}"
    dest: /srv/repo/extra/crypto_pro_csp/{{ crypto_pro_csp }}
  when: crypto_pro_csp_stat_result.stat.exists == False

- name: Copy Litoria Desktop package
  copy:
    src: "{{ extra_packages_src_path + litoria_desktop }}"
    dest: /srv/repo/extra/litoria-desktop/{{ litoria_desktop }}
  when: litoria_desktop_stat_result.stat.exists == False

- name: Copy R7 Office package
  copy:
    src: "{{ extra_packages_src_path + r7_office }}"
    dest: /srv/repo/extra/r7-office/{{ r7_office }}
  when: r7_office_stat_result.stat.exists == False

- name: Copy yandex browser package
  copy:
    src: "{{ extra_packages_src_path + yandex_browser }}"
    dest: /srv/repo/extra/yandex-browser/{{ yandex_browser }}
  when: yandex_browser_stat_result.stat.exists == False

- name: Copy yandex disk package
  copy:
    src: "{{ extra_packages_src_path + yandex_disk }}"
    dest: /srv/repo/extra/yandex-disk/{{ yandex_disk }}
  when: yandex_disk_stat_result.stat.exists == False

- name: Copy MS Teams package
  copy:
    src: "{{ extra_packages_src_path + ms_teams }}"
    dest: /srv/repo/extra/ms-teams/{{ ms_teams }}
  when: ms_teams_stat_result.stat.exists == False

- name: Copy rtadmin package
  copy:
    src: "{{ extra_packages_src_path + rtadmin }}"
    dest: /srv/repo/extra/rtadmin/{{ rtadmin }}
  when: rtadmin_stat_result.stat.exists == False

- name: Copy librtpkcs11ecp package
  copy:
    src: "{{ extra_packages_src_path + librtpkcs11ecp }}"
    dest: /srv/repo/extra/librtpkcs11ecp/{{ librtpkcs11ecp }}
  when: librtpkcs11ecp_stat_result.stat.exists == False

- name: Copy Citrix Client package
  copy:
    src: "{{ extra_packages_src_path + citrix_client }}"
    dest: /srv/repo/extra/citrix_client/{{ citrix_client }}
  when: citrix_client_stat_result.stat.exists == False

#  REPO FROM ISO
- name: Check existing of directory for mount OS ISO
  stat:
    path: /mnt/cdrom
  register: mnt_cdrom_stat_result

- name: Create directory for mount OS ISO
  file:
    path: /mnt/cdrom
    state: directory
    owner: root
    group: root
    mode: '0755'
  when: mnt_cdrom_stat_result.stat.exists == False

- name: Mount OS ISO
  mount:
    path: /mnt/cdrom
    src: /srv/iso/{{ orel_iso }}
    fstype: iso9660
    opts: ro,noauto
    state: present

- name: Check existing of extracted files from OS ISO
  stat:
    path: /srv/repo/orel/astra.ico
  register: iso_repo_stat_result

- name: Copy content from ISO to /srv/repo/orel
  shell: cp -a /mnt/cdrom/* /srv/repo/orel
  when: iso_repo_stat_result.stat.exists == False

#  FULL REPO
#- name: Check existing of local FULL repo
#  stat:
#    path: /srv/repo/orel/repository/conf/distributions
#  register: full_repo_stat_result

#- name: Download packages from remote repo (FULL)
#  shell: rsync --delete -aqLz rsync://dl.astralinux.ru/astra/astra/stable/2.12_x86-64/repository /srv/repo/orel
#  args:
#    warn: no
#  when: full_repo_stat_result.stat.exists == False

- name: Set owner and permissions on /srv/repo
  shell: chmod -R 755 /srv/repo && chown -R www-data:www-data /srv/repo

- name: Create symbolic link to repo
  file:
    src: /srv/repo
    dest: /var/www/html/repo
    state: link
    owner: www-data
    group: www-data
    mode: '0755'

- name: Remove Apache2 default configuration file
  file:
    path: /etc/apache2/sites-enabled/000-default.conf
    state: absent

- name: Copy Apache2 configuration file
  template:
    src: 000-default.conf
    dest: /etc/apache2/sites-enabled/000-default.conf
  notify: restart_apache2

- name: Start Apache2, if not started
  ansible.builtin.service:
    name: apache2.service
    state: started
